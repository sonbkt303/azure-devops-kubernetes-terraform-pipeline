trigger:
- master

pool: 'Default'

steps:
- script: echo K8S Terraform Azure!
  displayName: 'Run a one-line script'

- task: DownloadSecureFile@1
  name: publickKey
  displayName: 'Download publick key'
  inputs:
    secureFile: 'azure-rsa.pub'
    retryCount: 5


- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    # commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
    backendType: 'azurerm'
    backendServiceArm: 'Azure subscription(44e3fb22-c762-4f5e-b485-f6b13f45f3bd)'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'terraform-backend-rg'
    backendAzureRmResourceGroupLocation: 'westeurope'
    backendAzureRmStorageAccountName: 'storageacctrangaxyz'
    backendAzureRmContainerName: 'storageacctrangacontainer'
    backendAzureRmKey: 'kubernetes-dev.tfstate'

- task: TerraformCLI@0
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    environmentServiceName: 'Azure subscription(44e3fb22-c762-4f5e-b485-f6b13f45f3bd)'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'



# - task: TerraformCLI@0
#   inputs:
#     command: 'destroy'
#     workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
#     environmentServiceName: 'azure-resource-manager-service-connection'